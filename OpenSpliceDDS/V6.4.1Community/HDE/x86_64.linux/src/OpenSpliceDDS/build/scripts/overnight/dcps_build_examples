#!/bin/bash

export OSPL_BUILDING_EXAMPLES=yes

. buildsys/functions

ProcessArgs $*
Assert LoadConfigs
Assert SetupLogDir
Assert SetupResFile

BASE=`/bin/pwd`
export BASE
CURRENT_PL_LINUX=`uname | grep Linux`
CURRENT_PL_CYGWIN=`uname | grep CYGWIN`
CURRENT_PL_AIX=`uname | grep AIX`
CURRENT_PL_SUNOS=`uname | grep SunOS`
SSSO10=`hostname | grep ssso10`
IS_WINDOWS_EXE="false"
AWK=""

if [ "$CURRENT_PL_SUNOS" != "" ] ;then
   AWK="/usr/xpg4/bin/awk"
else
   AWK="awk"
fi

IS_64_BIT=` $AWK -v a=$SETUP_TYPE 'BEGIN { print index(a, "x86_64") }'`

IS_STUDIO12=` $AWK -v a=$SETUP_TYPE 'BEGIN { print index(a, "studio12") }'`

IS_DEBUG=` $AWK -v a=$SETUP_TYPE 'BEGIN { print index(a, "-dev") }'`

if [ "$DEP" = "none" ]
then
   . ./build_example_summary_fns
else
   . $DEPWORKDIR/build/scripts/overnight/build_example_summary_fns
fi

cd ../../..

SetState BuildingExamples
echo "BUILD/EXAMPLES=RUNNING" >> $RESFILE
ArchiveLogs


# For example summary
SUM=0
SUCC=0
FAIL=0

check_platform()
{

  if [ "$CURRENT_PL_LINUX" != "" -o "$CURRENT_PL_AIX" != "" -o "$CURRENT_PL_SUNOS" != "" ] ;then
    return 0
  elif [ "$CURRENT_PL_CYGWIN" != "" ];then
    if [ "$TARGET_PIKEOS" = "" ] ;then
      return 1
    else
      return 0
    fi
  else
   echo UNKNOWN Platform:
   echo Current platform: `uname`
   exit
  fi
}


integrity_examples()
{
   if [ "$DEP" != "none" ]
   then
      OSPL_HOME=$DEPWORKDIR
      export OSPL_HOME
   fi

   SPLICE_PLATFORM=$SETUP_TYPE
   export SPLICE_PLATFORM
   . ./configure -full
   SPLICE_ORB=DDS_OpenFusion_1_6_1
   export SPLICE_ORB

   if [ "$CONFIGURATION" != "OK" ]
   then
      echo  "ERROR: configuration - dcps_build_examples"
      exit 1
   fi

   ArchiveLogs

    . $CONFIGFILE
   cd $LOGDIR/examples/build

   $OSPL_OUTER_HOME/testsuite/bin/build_examples_pcx86_integrity509
   exit $?
}

install_ospl()
{
    echo "Installing..."

# What is our installer called?
    INSTALLER_FILENAME=`echo $INSTALLERDIR/VC/P*OpenSplice*HDE*installer.*`

    if [ -f ${INSTALLER_FILENAME} ]
    then
# Could be .bin or .exe for executables, or .zip or .tgz for archives
        INSTALLER_EXTENSION=`echo $INSTALLER_FILENAME | sed -e 's/.*\.\(...\)$/\1/g'`
        case $INSTALLER_EXTENSION in
            bin)
                echo "Installing ${INSTALLER_FILENAME} into $WORKDIR/$EXAMPLE_INSTALL_DIR/"
                ${INSTALLER_FILENAME} --mode unattended --prefix "$WORKDIR/$EXAMPLE_INSTALL_DIR/"
#--providedLicenseFile licfile
                ;;

            tar)
                echo "Untarring ${INSTALLER_FILENAME} ..."
                mkdir "$WORKDIR/$EXAMPLE_INSTALL_DIR"
                (
                  cd "$WORKDIR/$EXAMPLE_INSTALL_DIR/" && \
                  tar -xf ${INSTALLER_FILENAME}
                  mv HDE/$SHORTSETUP/release.com \
                      HDE/$SHORTSETUP/release.com.orig
                  sed < HDE/$SHORTSETUP/release.com.orig \
                      > HDE/$SHORTSETUP/release.com \
                      "s%@@INSTALLDIR@@%$WORKDIR/$EXAMPLE_INSTALL_DIR/%"
                )
                ;;

            zip)
                echo "Unzipping ${INSTALLER_FILENAME} ..."
                mkdir "$WORKDIR/$EXAMPLE_INSTALL_DIR"
                (
                  cd "$WORKDIR/$EXAMPLE_INSTALL_DIR/" && \
                  unzip ${INSTALLER_FILENAME}
                )
                ;;
            exe)
                IS_WINDOWS_EXE="true"
                mkdir "$WORKDIR/$EXAMPLE_INSTALL_DIR"

                PATH="$PATH:/cygdrive/c/WINDOWS/system32"
                export PATH

                XPATH_INSTALLFILE=`cygpath -w "$INSTALLER_FILENAME"`
                XPATH_WORKDIR=`cygpath -w "$WORKDIR"`

                echo "exe file exists installing to $WORKDIR/$EXAMPLE_INSTALL_DIR ...."
                cmd.exe /C $XPATH_INSTALLFILE --mode unattended --prefix "$XPATH_WORKDIR/$EXAMPLE_INSTALL_DIR/"
                ;;
        esac
    else
        echo "Unable to find an installer in $INSTALLERDIR/VC"
    fi

    INSTALLER_RTS_FILENAME=`ls $INSTALLERDIR/VC/P*OpenSplice*RTS*installer.* | grep -v HDE`
    if [ -f ${INSTALLER_RTS_FILENAME} ]
    then
        RTS_EXTENSION=`echo $INSTALLER_RTS_FILENAME | sed -e 's/.*\.\(...\)$/\1/g'`
        case $RTS_EXTENSION in
            bin)
                echo "Installing ${INSTALLER_RTS_FILENAME} (RTS) into $WORKDIR/$RTS_INSTALL_DIR/"
                ${INSTALLER_RTS_FILENAME} --mode unattended --prefix "$WORKDIR/$RTS_INSTALL_DIR/"
                ;;

            tar)
                echo "Untarring ${INSTALLER_RTS_FILENAME} (RTS) ..."
                mkdir "$WORKDIR/$RTS_INSTALL_DIR"
                (
                  cd "$WORKDIR/$RTS_INSTALL_DIR/" && \
                  tar -xf ${INSTALLER_RTS_FILENAME}
                )
                ;;

            zip)
                echo "Unzipping ${INSTALLER_FILENAME} (RTS)..."
                mkdir "$WORKDIR/$RTS_INSTALL_DIR"
                (
                  cd "$WORKDIR/$RTS_INSTALL_DIR/" && \
                  unzip ${INSTALLER_RTS_FILENAME}
                )
                ;;
            exe)
                IS_WINDOWS_EXE="true"
                mkdir "$WORKDIR/$RTS_INSTALL_DIR"

                PATH="$PATH:/cygdrive/c/WINDOWS/system32"
                export PATH

                XPATH_INSTALLFILE=`cygpath -w "$INSTALLER_RTS_FILENAME"`
                XPATH_WORKDIR=`cygpath -w "$WORKDIR"`

                echo "exe file exists installing (RTS) to $WORKDIR/$RTS_INSTALL_DIR ...."
                cmd.exe /C $XPATH_INSTALLFILE --mode unattended --prefix "$XPATH_WORKDIR/$RTS_INSTALL_DIR/"
                ;;
        esac
    else
        echo "Unable to find an RTS installer in $INSTALLERDIR/VC. (This is expected for enterprise platforms)"
    fi

    if [ -n "$LICENSE_FILE" ]
    then
        echo "Copying License into $WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/etc ...."
        cp $LICENSE_FILE "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/etc/."
    fi
}

unix_windows_examples()
{
    # Install a copy
    if [ "$DEP" = "none" ]
    then
        INSTALLERDIR=$WORKDIR/build/install
        TEST_SRC_DIR=$WORKDIR/build/testsuite/tests
        . $WORKDIR/build/release_info/RELEASE
        LICENSE_FILE=""
    else
        echo "Setting OUTER_BASE to $BASE..."
        OUTER_BASE=$BASE
        LICENSE_FILE=$OUTER_BASE/../../../etc/license.lic
        BASE=$DEPWORKDIR/build/scripts/overnight
        INSTALLERDIR=$DEPWORKDIR/install
        TEST_SRC_DIR=$DEPWORKDIR/testsuite/tests
        . $DEPWORKDIR/release_info/RELEASE
    fi

    install_ospl

    echo "Copying (1) $BASE/example_automation_scripts/* $WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/ ...."
    cp -rp $BASE/example_automation_scripts/* "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/"

    echo "DEP is $DEP....."

    if [ "$DEP" != "none" ]
    then
        echo "Copying (2) $WORKDIR/build/build/scripts/overnight/example_automation_scripts/* $WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/ ...."
        cp -rp $WORKDIR/build/build/scripts/overnight/example_automation_scripts/* "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/"
    fi

    if [ $? = 0 ]
    then
        echo "Install completed"
    else
        echo "ERROR: Install failed"
        exit 1
    fi

    EXAMPLESDIR="$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/examples"

    cd "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/"

    if check_platform
    then
        unset OSPL_HOME_NORMALIZED
        . ./release.com
    fi

    cd examples
    if [ $? != 0 ]
    then
        echo "ERROR: Couldn't locate examples directory in installed HDE."
        exit 1
    fi

    export TEST_SRC_DIR

    if [ "$CURRENT_PL_AIX" != "" ]
    then
       PATH="/usr/vac/bin:/usr/vacpp/bin:$PATH"
    fi

    #ssso10 needs to have the location of make added to the PATH in order to build the examples
    if [ "$SSSO10" != "" ]
    then
        PATH="/opt/ospldev/make/v3.80/sun4u.SunOS-5.8/bin:$PATH"
        if [ ! -z "$TARGET_VX5" ]
        then
	   . /opt/ospldev/VxWorks/v5.5.1/release.com
	fi
    else
        if [ ! -z "$TARGET_VX5" ]
        then
	   . /opt/ospldev/VxWorks/v5.5.2/release.com
	fi
    fi

    BUILD_ERROR=0

    echo "Build Examples - `date`"
    if check_platform
    then
        PATH="$JAVA_HOME/bin:$PATH"
        PATH="$PATH:$TAO_ROOT/bin:$JACORB_HOME/bin"

        LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$TAO_ROOT/lib"

        # Need to do this for solaris for building the dbmsconnect example
        if [ "$IS_STUDIO12" != 0 ]
        then
           LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/gcc-3.4.6/lib"
        fi

        SPLICE_ORB=DDS_OpenFusion_1_6_1

        CLASSPATH="$CLASSPATH:$JACORB_HOME/lib/endorsed/jacorb.jar:$JACORB_HOME/lib/endorsed/logkit.jar:$JACORB_HOME/lib/idl.jar"
        ACE_ROOT=$TAO_ROOT

        export PATH LD_LIBRARY_PATH SPLICE_ORB CLASSPATH ACE_ROOT

        ODBCINI="$ODBCHOME/etc/odbc.ini"
        ODBCINST="$ODBCHOME/etc/odbcinst.ini"
        ODBC_MSSQL_SERVER="10.1.0.189"
        ODBC_MYSQL_SERVER="10.1.0.191"
        ODBCSYSINI="$ODBCHOME/etc"

        export  ODBCINI ODBCINST ODBC_MSSQL_SERVER ODBC_MYSQL_SERVER ODBCSYSINI

        PROJECTS=`ls Makefile*`

        if [ -n "$OSPL_EXAMPLE_BUILD_PREFIX_PATH" ]
        then
            PATH=$OSPL_EXAMPLE_BUILD_PREFIX_PATH:$PATH
        fi

        echo " ####  Example Build Begin #### "
        for PROJECT in $PROJECTS
        do
            if [ -f "$PROJECT" ]
            then
                echo " ####  Project: $PROJECT Begin #### "
                make -k -f $PROJECT
                if [ $? -ne 0 ]
                then
                    echo "Error calling make on $PROJECT"
                    BUILD_ERROR=1
                fi
            else
                echo "Not making make file $PROJECT as make file not found"
            fi
        done
    else
        PATH="$PATH:/cygdrive/c/WINDOWS/system32"
        export PATH

        XPATH=`cygpath -w "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP"`

        echo "set OSPL_HOME=$XPATH" > setenv.bat

        XPATH=`cygpath -d "$TAO_ROOT"`
        echo "set TAO_ROOT=$XPATH" >> setenv.bat
        echo "set ACE_ROOT=$XPATH" >> setenv.bat
        echo "set VS_VER=$VS_VER" >> setenv.bat

        BUILD_CONFIG="DEBUG"

        if [ "$IS_DEBUG" = "0" ]
        then
            BUILD_CONFIG="RELEASE"
        fi

        # Need to pass the 64 bit nature of the configuration to devenv to override the default 32 bit
        if [ "$IS_64_BIT" = "1" ]
        then
            BUILD_CONFIG="$BUILD_CONFIG|x64"
        fi

        echo "set BUILD_CONFIG=\"$BUILD_CONFIG\"" >> setenv.bat

        XPATH=`cygpath -w "$JACORB_HOME"`
        echo "set JACORB_HOME=$XPATH" >> setenv.bat

        XPATH=`cygpath -w "$LOGDIR"`
        echo "set LOGDIR=$XPATH" >> setenv.bat

        echo "set SPLICE_ORB=DDS_OpenFusion_1_6_1" >> setenv.bat

        echo "set JAVA_HOME=$JAVA_HOME" >> setenv.bat

        echo "set PATH=%JAVA_HOME%\bin;%TAO_ROOT%\bin;%TAO_ROOT%\lib;%PATH%;%JACORB_HOME%\bin" >> setenv.bat

        echo "set CLASSPATH=%CLASSPATH%;%JACORB_HOME%\lib\endorsed\jacorb.jar;%JACORB_HOME%\lib\endorsed\logkit.jar;%JACORB_HOME%\lib\idl.jar" >> setenv.bat

        echo "set VS_ENV_SCRIPT=$VS_ENV_SCRIPT" >> setenv.bat

        XPATH=`cygpath -w "$BASE"`

        echo "set OSPLI_BASE=$XPATH" >> setenv.bat

        # For some reason dds3-win2k3 likes uppercase C - this works on
        # the other windows machines too
        cmd.exe /C $XPATH/build_examples.bat

        if [ -n "`egrep -i '(fatal error|error MSB1003|[1-9][0-9]* error\(s\)|[1-9][0-9] errors|Error 127|killed)' $LOGDIR/examples/build/build_results.txt `" ]
        then
           echo "There were errors building the examples - but if we exit none will run even if only 1 example failed to build"
           BUILD_ERROR=1
        fi
    fi
    exit $BUILD_ERROR
}


vxworks6x_examples()
{
    echo "Setting OUTER_BASE to $BASE..."
    OUTER_BASE=$BASE
    LICENSE_FILE=$OUTER_BASE/../../../etc/license.lic
    BASE=$DEPWORKDIR/build/scripts/overnight
    INSTALLERDIR=$DEPWORKDIR/install
    . $DEPWORKDIR/release_info/RELEASE

   install_ospl

   EXAMPLESDIR="$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/examples"
   cd "$WORKDIR/$EXAMPLE_INSTALL_DIR/HDE/$SHORTSETUP/"


   if [ "$CURRENT_PL_CYGWIN" == "" ]
   then
      . ./release.com
   else
      . ./release.bat
   fi

   PATH="$JAVA_HOME/bin:$PATH"
   cd examples
   if [ $? != 0 ]
   then
      echo "ERROR: Couldn't locate examples directory in installed HDE."
      exit 1
   fi

   echo " Begin building examples -  `date`"

   CURDIR=`pwd`
   for WRSPROJECTLIST in wb30projects*.lst
   {
     echo "Processing $WRSPROJECTLIST"
     rm -f build.log
     wrws_import.sh -data `pwd`/examplews -f `grep -v '^#' $WRSPROJECTLIST | sed "s@^@$CURDIR/@" | tr '\n' ',' | sed 's/,$/\n/'` > build.log 2>&1
     # Fake status as wrws_import does not return correct status codes.
     status=0
     create_example_summary ${WRSPROJECTLIST}_IMPORT
     for WRSPROJECT in `grep -v '#' $WRSPROJECTLIST | sed -e 's@\(.*/\)\(.*\)\(/[^/]*$\)@\2@'`
     {
       rm -f build.log
       wrws_update.sh -data `pwd`/examplews -b -l $WRSPROJECT > build.log 2>&1
       # Fake status as wrws_update does not return correct status codes.
       status=0
       create_example_summary $WRSPROJECT
     }
   }
   BUILD_RESULTS_LOG=$LOGDIR/examples/build/build_summary.txt
   BUILD_LOG=$LOGDIR/examples/build/build_results.txt
   SUMMARY_LOG=$LOGDIR/examples/build/build_summary.log
   create_example_final_summary
   exit $FAIL
}


BUILD_LOG=$LOGDIR/examples/build/build_results.txt
BUILD_RESULTS_LOG=$LOGDIR/examples/build/build_summary.txt
SUMMARY_LOG=$LOGDIR/examples/build/build_summary.log

if [ -f "${DEPWORKDIR}/setup/environment/${SETUP_TYPE}" ]
then
    CHECK_FILE=${DEPWORKDIR}/setup/environment/${SETUP_TYPE}
else
    if [ -f "${WORKDIR}/build/setup/environment/${SETUP_TYPE}" ]
    then
        CHECK_FILE=${WORKDIR}/build/setup/environment/${SETUP_TYPE}
    fi
fi
SHORTSETUP=`grep "^SPLICE_TARGET=" $CHECK_FILE | tail -1 | cut -f 2 -d = | sed 's/-release//'`

export BUILD_RESULTS_LOG
export BUILD_LOG
export SUMMARY_LOG

case $SETUP_TYPE in
    *int509*)
       integrity_examples;;
    *vxworks6*)
       vxworks6x_examples;;
    *vxworks5*)
       TARGET_VX5=1
       unix_windows_examples;;
    *pikeos3*)
       TARGET_PIKEOS=1
       unix_windows_examples;;
    *)
       unix_windows_examples;;
esac
