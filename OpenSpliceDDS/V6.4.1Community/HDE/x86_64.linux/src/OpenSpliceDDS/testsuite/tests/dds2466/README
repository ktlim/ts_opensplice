This is the readme file fot the test eFDPfi_MW_DDS_15:

DEIRECTORIES / FILES:
    * stax           - folder with scripts to run this multi-host test in automated mode
    * stax/dds2466_test_scenario.py - Python module for the test case
    * stax/run_text.xml             - STAX script to run the test case
    * stax/run_text.xml             - Linux shell script to run STAX script
    * README         - this file
    * build.sh       - bash script for building executables
    * dds2466.mpc    - MPC project file for the test (as the test uses OSPL_TESTLIB library created by Simon)
    * subscriber.h   - source code for the test
      subscriber.cpp
      publisher.h
      publisher.cpp
      dds2466.idl
    * run_subscriber.sh - script to run subscriber executable on the local host
    * run_publisher.sh  - script to run publisher executable on the local host
    * run_on_host1.sh   - script to run publisher/subscriber pair on local host (the publisher will wait for synchronization with another publisher)
    * run_on_host2.sh   - script to run publisher/subscriber pair on local host (the publisher will sent synchronization to another publisher)

HOWTO Build:
        You need to have the following software:
            1) CORBA-based framework (OSPL_TESSTLIB) created by Simon (located in ospli/testsuite/tests/teslib) built
            2) OpenSplice DDS installed

        Building steps are:
            1) Source appropriate "release.com" script from installed OSPL
            2) Change path of the OSPL_TESTLIB in "build.sh" script of the dds2466 folder
            3) Launch "build.sh" script

HOWTO Launch manually:
        1) You should use the following scripts to run test on the hosts "run_on_host*.sh"
        2) In those script you MUST specify the following:
            a. Path to the OSPL_TESTLIB location
            b. Location of TAO_ROOT

            b. Ports for the publishers (need for synchronization)
            c. Hostname of the another publisher (need for synchronization)
            d. Publishers and subscriber IDs (just to determination of the entities)
            e. Which publisher will wait for synchronization (by setting PUB_WAITER variable)
        3) Launch run_on_host1.sh script on one host.
        4) Launch run_on_host2.sh script on another host.
        5) After that there will be the following log files created  publisherID.log, subscriberID.log.
        6) Manual check should be performed using the log files.

    Expected results are:

    0) All publisher and subscriber applications must not print FAIL messages

    1) Each subscriber must have instances with the same timestamp as they was sent by one of the publisher
      (e.g. if publisher #1 sent the instance with the following data:
          id          : 1
          data        : "Publisher #1 sent id=[1]."
          publisher_id: 1
      with the timestamp [1:0] then all subscribers must have this instance with the timestamp [1:0])

    2) For all subscribers the last sample of an instance must be written by the same publisher (so always publisher #1 or always publisher #2).

    3) Both log of the last samples of each instance should show the SAME publisher for each sample with a specific ID.

    4) The number of received samples plus the number of lost samples should be equal to the total number of published samples.
