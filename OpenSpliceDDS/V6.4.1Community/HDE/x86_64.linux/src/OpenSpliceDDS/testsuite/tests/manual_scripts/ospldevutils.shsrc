#!/bin/bash

# This file must only be sourced.
if [ -z "$BASH_SOURCE" -o "$0" = "$BASH_SOURCE" ]; then
    echo "ERROR: Only source '$0' file"
    exit 1
fi

# Source current settings.
. "$(dirname "$BASH_SOURCE")/osplsettings.shsrc" "$@"

function source_tao_runtime ()
{
    local local_root="$(to_unix_path "$TAO_ROOT")"
    if [ -z "$local_root" -o ! -d "$local_root" ]; then
        error_help "ERROR: TAO_ROOT is not correctly set to '$TAO_ROOT'"
        return 1
    fi

    if [ "$(uname)" != 'SunOS' ]; then    
        if [ "$(uname -o)" = 'Cygwin' ]; then
            export PATH="$local_root/bin:$local_root/lib:$PATH"
        else
            export PATH="$local_root/bin:$PATH" LD_LIBRARY_PATH="$local_root/lib:$LD_LIBRARY_PATH"
        fi
    else
       export PATH="$local_root/bin:$PATH" LD_LIBRARY_PATH="$local_root/lib:$LD_LIBRARY_PATH"
    fi

    export ACE_ROOT="$TAO_ROOT"
}

function source_mico_runtime ()
{
    local local_root="$(to_unix_path "$MICO_ROOT")"
    if [ -z "$local_root" -o ! -d "$local_root" ]; then
        error_help "ERROR: MICO_ROOT is not correctly set to '$MICO_ROOT'"
        return 1
    fi

    if [ "$(uname)" != 'SunOS' ]; then  
        if [ "$(uname -o)" = 'Cygwin' ]; then
            export PATH="$local_root/bin:$local_root/lib:$PATH"
        else
            export PATH="$local_root/bin:$PATH" LD_LIBRARY_PATH="$local_root/lib:$LD_LIBRARY_PATH"
        fi
    else
        export PATH="$local_root/bin:$PATH" LD_LIBRARY_PATH="$local_root/lib:$LD_LIBRARY_PATH" 
    fi
}

function source_jacorb_runtime ()
{
    local local_root="$(to_unix_path "$JACORB_HOME")"
    if [ -z "$local_root" -o ! -d "$local_root" ]; then
        error_help "ERROR: JACORB_HOME is not correctly set to '$JACORB_HOME'"
        return 1
    fi
}

function source_rtorb_runtime ()
{
    local local_root="$(to_unix_path "$RTORB_HOME")"
    if [ -z "$local_root" -o ! -d "$local_root" ]; then
        error_help "ERROR: RTORB_HOME is not correctly set to '$RTORB_HOME'"
        return 1
    fi
}

function source_java_runtime ()
{
    local local_root="$(to_unix_path "$JAVA_HOME")"
    if [ -z "$local_root" -o ! -d "$local_root" ]; then
        error_help "ERROR: JAVA_HOME is not correctly set to '$JAVA_HOME'"
        return 1
    fi
    export PATH="$local_root/bin:$PATH"
}

function source_studio12_runtime ()
{
    local local_root="$(to_unix_path "$OSPLDEV_ROOT")"

    export PATH="$local_root/make:/usr/local/studio12/SUNWspro/bin:$PATH"
}

function _check_ospldevutils_args ()
{
    while [ $# -ne 0 ]
    do
        case "$1" in
            -h|--help)
                # Nothing to print as help here.
                return 1
                ;;
            *)
                shift
                ;;
        esac
    done
}
if [ -z "$g_ospldevutils_loaded" ]; then
    g_ospldevutils_loaded='yes'
    # This is the last line in this file. It can set $? which is important for
    # the outside code. Don't do anything after this!!!
    _check_ospldevutils_args "$@"
fi
