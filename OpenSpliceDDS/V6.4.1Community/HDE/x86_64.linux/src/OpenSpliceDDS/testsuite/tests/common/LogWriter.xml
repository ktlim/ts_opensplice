<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../stax/stax.dtd">

<stax>

    <function name="SaveJobLog">
        <function-list-args>
            <function-required-arg name="jobname">STAX Job name, used as directory name for writing the logfiles</function-required-arg>
            <function-required-arg name="jobid">STAX Job or SubJob ID, used to find the source STAF logfiles</function-required-arg>
            <function-optional-arg name="mask" default="'11111111111111111111111111111111'">Log mask to store only messages of a certain loglevel (default: save all)</function-optional-arg>
            <function-optional-arg name="jobfile" default="'joblog.txt'">Name of file to save job log (default: joblog.txt)</function-optional-arg>
            <function-optional-arg name="userfile" default="'userlog.txt'">Name of file to save job user log (default: userlog.txt)</function-optional-arg>
        </function-list-args>
        <sequence>
            <!-- Initialize -->
            <stafcmd name="'LogWriter::Initialize'">
                <location>STAXCurrentXMLMachine</location>
                <service>'VAR'</service>
                <request>
                    'RESOLVE STRING %s STRING %s' % ( '{STAF/Config/Sep/File}', '{STAF/Config/OS/Name}')
                </request>
            </stafcmd>
            <if expr="RC == STAFRC.Ok">
                <script>
                    filesep = STAFResult[0]['result']
                    osname = STAFResult[1]['result']      
                </script>
                <else>
                    <sequence>
                        <log message="STAXMessageLog" level="'info'">'Failed to run STAF command: %s' % STAFResult</log>
                        <return>0</return>
                    </sequence>
                </else>
            </if>
            <script>
                # default STAF log location
                logdir = '{STAF/DataDir}%(sep)cservice%(sep)clog%(sep)cMACHINE%(sep)c{STAF/Config/MachineNickname}%(sep)cGLOBAL%(sep)c' % { 'sep': filesep }
                targetdir = '{STAF/DataDir}%(sep)clogfiles%(sep)c%(job)s%(sep)c' % { 'sep': filesep, 'job': jobname }
                joblogfile = 'STAX_Job_%d.log' % jobid
                userlogfile = 'STAX_Job_%d_User.log' % jobid
                if osname.lower().startswith('win'):
                    fmtexec = '{STAF/Env/STAF_HOME}%(sep)cbin%(sep)cFmtLog.exe' % { 'sep': filesep }
                else:
                    fmtexec = '{STAF/Env/STAF_HOME}%(sep)cbin%(sep)cFmtLog' % { 'sep': filesep }
            </script>
            
            <!-- Write Job Log -->
            <script>request = '%s FORMAT LOGFILE %s%s NEWFILE %s%s' % (fmtexec, logdir, joblogfile, targetdir, jobfile)</script>
            <process name="'FmtJobLog'">
                <location>STAXCurrentXMLMachine</location>
                <command mode="'shell'">request</command>
                <stderr mode="'stdout'"/>
                <returnstdout/>
            </process>
            <log if="RC != STAFRC.Ok" message="1" level="'error'">'Failed to write job log for job %s: %s (RC: %s)' % (jobname, STAFResult, RC)</log>
            <!-- <log if="RC != STAFRC.Ok" message="1" level="'debug'">'Log command: %s' % request</log>  -->
            <log if="RC == STAFRC.Ok" message="1" level="'info'">'Job log saved for job %s: %s\n%s' % (jobname, targetdir + jobfile, STAFResult)</log>
            
            <!-- Write User Log -->
            <script>request = '%s FORMAT LOGFILE %s%s NEWFILE %s%s' % (fmtexec, logdir, userlogfile, targetdir, userfile)</script>
            <process name="'FmtUserLog'">
                <location>STAXCurrentXMLMachine</location>
                <command mode="'shell'">request</command>
                <stderr mode="'stdout'"/>
                <returnstdout/>
            </process>
            <log if="RC != STAFRC.Ok" message="1" level="'error'">'Failed to write job userlog for job %s: %s (RC: %s)' % (jobname, STAFResult, RC)</log>
            <!-- <log if="RC != STAFRC.Ok" message="1" level="'debug'">'Log command: %s' % request</log>  -->
            <log if="RC == STAFRC.Ok" message="1" level="'info'">'Job userlog saved for job %s: %s\n%s' % (jobname, targetdir + userfile, STAFResult)</log>
        </sequence>
    </function>
    
</stax>