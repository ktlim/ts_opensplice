#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
JAVAC         = $(SPLICE_JAVAC)
JAR           = jar
JAVACFLAGS    = $(GENFLAGS)
CLASSEXT      = .class
CLASSDIR      = classes/
OUTPUT_OPTION = -d $(CLASSDIR)
COMPILE.java  = $(JAVAC) $(JAVACFLAGS) -cp $(JAVACCPATH) 
JAVACCPATH    = "$(SPLICE_EXTRA_CP):$(CLASSDIR):../../../../jar/dcpssaj5.jar:"
MAKEFILE      = Makefile.Saj5_RoundTrip_Types
DEPENDENCIES  = $(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
GENFLAGS      =  
CLASSES       =  $(CLASSDIR)./RoundTripModule/*$(CLASSEXT) $(CLASSDIR)pong$(CLASSEXT) $(CLASSDIR)Ping_impl$(CLASSEXT) $(CLASSDIR)Entities$(CLASSEXT) $(CLASSDIR)ExampleUtilities$(CLASSEXT) $(CLASSDIR)ping$(CLASSEXT) $(CLASSDIR)Pong_impl$(CLASSEXT)
JARCLASSES    =  ./RoundTripModule/*$(CLASSEXT) pong$(CLASSEXT) Ping_impl$(CLASSEXT) Entities$(CLASSEXT) ExampleUtilities$(CLASSEXT) ping$(CLASSEXT) Pong_impl$(CLASSEXT)
JAREXT        = .jar
MAINCLASS     = pong
JARFILE       = $(LTARGETDIR)$(LIBPREFIX)Saj5_RoundTrip_Types$(LIBSUFFIX)$(JAREXT)
MANIFEST      = Saj5_RoundTrip_Types.manifest
JARFLAGS      = cvfm
SRC           = ./RoundTripModule/*.java pong.java Ping_impl.java Entities.java ExampleUtilities.java ping.java Pong_impl.java

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(JARFILE)

$(JARFILE): $(CLASSES) $(CLASSDIR)$(MANIFEST)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	cd $(CLASSDIR) && $(JAR) $(JARFLAGS) $(JARFILE) $(MANIFEST) $(JARCLASSES) 
	$(MV) $(CLASSDIR)/$(JARFILE) .

$(CLASSDIR)$(MANIFEST):
	echo Class-Path: ../../../../jar/dcpssaj5.jar > $(CLASSDIR)$(MANIFEST)
	echo Main-Class: $(MAINCLASS) >> $(CLASSDIR)$(MANIFEST)

GENERATED_DIRTY = ./RoundTripModule

./RoundTripModule: ../idl/RoundTrip.idl
	"../../../../bin/idlpp" -I "../../../../etc/idl" -l java ../idl/RoundTrip.idl

.PRECIOUS: $(GENERATED_DIRTY)
$(CLASSES): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-:

$(CLASSDIR)./RoundTripModule/*$(CLASSEXT): ./RoundTripModule
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ./RoundTripModule/*.java

$(CLASSDIR)pong$(CLASSEXT): pong.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) pong.java

$(CLASSDIR)Ping_impl$(CLASSEXT): Ping_impl.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) Ping_impl.java

$(CLASSDIR)Entities$(CLASSEXT): Entities.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) Entities.java

$(CLASSDIR)ExampleUtilities$(CLASSEXT): ExampleUtilities.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ExampleUtilities.java

$(CLASSDIR)ping$(CLASSEXT): ping.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ping.java

$(CLASSDIR)Pong_impl$(CLASSEXT): Pong_impl.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) Pong_impl.java

clean:
	-$(RM) $(CLASSES)

realclean: clean
	-$(RM) $(BIN)
	-$(RM) $(GENERATED_DIRTY)
	-$(RM) $(CLASSDIR)$(MANIFEST)

check-syntax:
	$(COMPILE.java) $(EXPORTFLAGS) $(CHK_SOURCES)

